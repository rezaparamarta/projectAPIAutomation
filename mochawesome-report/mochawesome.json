{
  "stats": {
    "suites": 4,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-15T10:25:29.186Z",
    "end": "2024-08-15T10:25:32.568Z",
    "duration": 3382,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e55aefd1-239a-45f5-b13a-b8e91ab28840",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3fb5be96-4b08-463d-bbc7-f2249b5aab93",
          "title": "API Test for restful-api.dev",
          "fullFile": "D:\\latihanAPIAJA\\test\\test-demo.js",
          "file": "\\test\\test-demo.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test - GET All Objects",
              "fullTitle": "API Test for restful-api.dev Test - GET All Objects",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(BASE_URL)\n.get('objects')\n//Assertion\nassert.equal(response.statusCode, 200)\nassert.equal(response.body[0].name, 'Google Pixel 6 Pro');\nassert.equal(response.body[0].data.color, 'Cloudy White');",
              "err": {},
              "uuid": "8b8d15d2-34f7-4fb9-b6c0-bc89d94b1c44",
              "parentUUID": "3fb5be96-4b08-463d-bbc7-f2249b5aab93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test - POST Store Objects",
              "fullTitle": "API Test for restful-api.dev Test - POST Store Objects",
              "timedOut": false,
              "duration": 302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n    \"name\": \"Apple MacBook Pro 16\",\n    \"data\": {\n       \"year\": 2019,\n       \"price\": 1849.99,\n       \"CPU model\": \"Intel Core i9\",\n       \"Hard disk size\": \"1 TB\"\n    }\n };\nconst response = await request(BASE_URL)\n.post('objects')\n.send(body);\nassert.equal(response.statusCode, 200);\nassert.equal(response.body.name, 'Apple MacBook Pro 16');\nassert.equal(response.body.data.year, 2019);\n\nconst schemaFolder = 'resources/jsonSchema/post-object-schema.json'\nconst jsonSchema = JSON.parse(fs.readFileSync(schemaFolder, 'utf-8'))\nassert.jsonSchema(response.body, jsonSchema);",
              "err": {},
              "uuid": "7a623146-8a45-4d6a-90c3-4cb0c507c3d0",
              "parentUUID": "3fb5be96-4b08-463d-bbc7-f2249b5aab93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b8d15d2-34f7-4fb9-b6c0-bc89d94b1c44",
            "7a623146-8a45-4d6a-90c3-4cb0c507c3d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 784,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "8eda893b-6b41-4b83-93c5-cdd3be24ccbb",
          "title": "Test - Global Scope Variable",
          "fullFile": "D:\\latihanAPIAJA\\test\\test-demo.js",
          "file": "\\test\\test-demo.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "This must be return get data",
              "fullTitle": "Test - Global Scope Variable This must be return get data",
              "timedOut": false,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(BASE_URL)\n.get('objects')",
              "err": {},
              "uuid": "f784ea52-972e-4797-8163-5067ffbb5380",
              "parentUUID": "8eda893b-6b41-4b83-93c5-cdd3be24ccbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f784ea52-972e-4797-8163-5067ffbb5380"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 463,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "e1bb7250-7bf8-48ce-a440-e57fb36c25b4",
          "title": "Test Suite CRUD API Reqres",
          "fullFile": "D:\\latihanAPIAJA\\test\\test-reqres.js",
          "file": "\\test\\test-reqres.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "This must be return call API - single user",
              "fullTitle": "Test Suite CRUD API Reqres This must be return call API - single user",
              "timedOut": false,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(BASE_URL)\n.get('api/users/2')\n\nassert.equal(response.status, 200);\nassert.equal(response.body.data.email, 'janet.weaver@reqres.in');",
              "err": {},
              "uuid": "907e486c-e6ff-41d8-a6c7-369d271966ba",
              "parentUUID": "e1bb7250-7bf8-48ce-a440-e57fb36c25b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "This must be return call API - create user",
              "fullTitle": "Test Suite CRUD API Reqres This must be return call API - create user",
              "timedOut": false,
              "duration": 558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n}\nconst response = await request(BASE_URL)\n.post('api/users')\n.send(body)\nassert.equal(response.status, 201);\nassert.equal(response.body.name, 'morpheus');\nassert.equal(response.body.job, 'leader');",
              "err": {},
              "uuid": "8a82039b-3c25-4bb3-a89f-c7a1bd0e1257",
              "parentUUID": "e1bb7250-7bf8-48ce-a440-e57fb36c25b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "This must be return call API - update user",
              "fullTitle": "Test Suite CRUD API Reqres This must be return call API - update user",
              "timedOut": false,
              "duration": 572,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bodyUpdate = {\n    \"name\": \"Reza Paramarta\",\n    \"job\": \"Software Engineer Test Aamiin\"\n}\nconst response = await request(BASE_URL)\n.put('api/users/2')\n.send(bodyUpdate)\nassert.equal(response.status, 200);\nassert.equal(response.body.name, 'Reza Paramarta');\nassert.equal(response.body.job, 'Software Engineer Test Aamiin');",
              "err": {},
              "uuid": "e3195430-3e80-45f9-8075-52d1f332e67c",
              "parentUUID": "e1bb7250-7bf8-48ce-a440-e57fb36c25b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "This must be return API call - delete",
              "fullTitle": "Test Suite CRUD API Reqres This must be return API call - delete",
              "timedOut": false,
              "duration": 597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(BASE_URL)\n.delete('api/users/2')\nassert.equal(response.status, 204);",
              "err": {},
              "uuid": "4844cc77-7ff6-4074-aeeb-eb26cae3778f",
              "parentUUID": "e1bb7250-7bf8-48ce-a440-e57fb36c25b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "907e486c-e6ff-41d8-a6c7-369d271966ba",
            "8a82039b-3c25-4bb3-a89f-c7a1bd0e1257",
            "e3195430-3e80-45f9-8075-52d1f332e67c",
            "4844cc77-7ff6-4074-aeeb-eb26cae3778f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1933,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "5dd377c6-02cf-47d5-85ca-d8f402c481ba",
          "title": "Test suite for jsonSchema",
          "fullFile": "D:\\latihanAPIAJA\\test\\test-reqres.js",
          "file": "\\test\\test-reqres.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "This must be return API call for check JsonSchema",
              "fullTitle": "Test suite for jsonSchema This must be return API call for check JsonSchema",
              "timedOut": false,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(BASE_URL)\n.get('api/users?page=2')\nassert.equal(response.status, 200);\n\nconst schemaFolder = 'resources/jsonSchema/get-object-schema.json'\nconst jsonSchema = JSON.parse(fs.readFileSync(schemaFolder, 'utf-8'));\nassert.jsonSchema(response.body, jsonSchema);",
              "err": {},
              "uuid": "fa683a9b-8c9d-4e9a-9284-c2a058f64d44",
              "parentUUID": "5dd377c6-02cf-47d5-85ca-d8f402c481ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa683a9b-8c9d-4e9a-9284-c2a058f64d44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 192,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}